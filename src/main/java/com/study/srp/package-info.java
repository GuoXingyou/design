package com.study.srp;

//3.单一职责原则(SRP)
//一个类有且只有一个引起它变化的原因


//如果一个类承担的职责太多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或者抑制这个类
//完成其他职责的能力。这种耦合会导致脆弱的设计，当变化发生时，设计会遭受到意想不到的破坏。

//类似可以参考 mvc ，界面，逻辑的分开，而不是用<% XXXX %>在界面中写逻辑代码


//设计的目的就在于发现职责并把职责相互分离；当发现多于一个的动机可以改变一个类，那么这个类就有多于一个的职责