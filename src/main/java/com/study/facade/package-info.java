package com.study.facade;

//外观模式 为子系统中的一组接口提供一个一致的界面，此模式定义了一个高级接口，这个接口使子系统更加易用



//很惭愧，在yjf写了那么多facade从来没去质疑为什么包名叫这个，原来用了那么就外观模式都不知道。。。

//首先，在设计初期阶段，应该要有意识的将两个不同的层分离，层与层之间建立外观facade；
//其次，在开发阶段，子系统往往因为不断地重构演化而变得越来越复杂，增加外观facade可以提供一个简单的接口，减小
//  它们之间的依赖；
//第三，在维护一个遗留的大系统时，可能这个系统已经非常难以维护和扩展了，我们可以为新系统开发一个外观facade类，
//  来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，让新系统与facade对象互动，facade与遗留代码交互
//  所有复杂的工作；


//根据以前在易极付做的soa理解，这种模式是把一些能力（soa中的很多原子能力）进行拼装之后封装成一个接口提供给客户，可以面对
//更多业务变化与需求